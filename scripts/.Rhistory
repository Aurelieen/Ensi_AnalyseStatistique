itv_conf <- function(x, alpha, sup=TRUE) {
n <- length(x)
if (sup) {
return (mean(x) + sd(x) * qt(1-alpha/2, n-1) / sqrt(n))
} else {
return (mean(x) - sd(x) * qt(1-alpha/2, n-1) / sqrt(n))
}
}
itv_conf(x, 0.5, FALSE)
itv_conf(x, 0.5, TRUE)
itv_conf(x, 0.1, FALSE)
itv_conf(x, 0.1, TRUE)
itv_conf(x, 0.05, FALSE)
itv_conf(x, 0.05, TRUE)
itv_conf(x, 0.01, FALSE)
itv_conf(x, 0.01, TRUE)
# ===========================
# Simulation des échantillons
emv_c <- NULL
for (i in 1:100) {
ech <- rexp(n = 5, rate = 10)
emv_c <- c(emv_c, 1/mean(ech))
}
hist(emv_c)
abline(v=10, col="green")
abline(v=mean(emv_c), col="red")
# Fiche d'exercices 4
# EXERCICE 1
x <- sort(c(91.6, 35.7, 251.3, 24.3, 5.4, 67.3, 170.9, 9.5, 118.4, 57.1))
n <- length(x)
x
# Estimateur du maximum de vraisemblance
emv_x <- 1/mean(x)
emv_x
# Estimateur optimal
emv_opt_x <- (n - 1)/sum(x)
emv_opt_x
# Intervalles de confiance
t.test(x, conf.level=0.5)       # Seuil de 50%
t.test(x, conf.level=0.9)       # Seuil de 10%
t.test(x, conf.level=0.95)      # Seuil de 5%
t.test(x, conf.level=0.99)      # Seuil de 1%
# Intervalles de confiance, à la main
itv_conf <- function(x, alpha, sup=TRUE) {
n <- length(x)
if (sup) {
return (mean(x) + sd(x) * qt(1-alpha/2, n-1) / sqrt(n))
} else {
return (mean(x) - sd(x) * qt(1-alpha/2, n-1) / sqrt(n))
}
}
itv_conf(x, 0.5, FALSE)
itv_conf(x, 0.5, TRUE)
itv_conf(x, 0.1, FALSE)
itv_conf(x, 0.1, TRUE)
itv_conf(x, 0.05, FALSE)
itv_conf(x, 0.05, TRUE)
itv_conf(x, 0.01, FALSE)
itv_conf(x, 0.01, TRUE)
# ===========================
# Simulation des échantillons
emv_c <- NULL
for (i in 1:100) {
ech <- rexp(n = 5, rate = 10)
emv_c <- c(emv_c, 1/mean(ech))
}
hist(emv_c)
abline(v=10, col="green")
abline(v=mean(emv_c), col="red")
# Fiche d'exercices 4
# EXERCICE 1
x <- sort(c(91.6, 35.7, 251.3, 24.3, 5.4, 67.3, 170.9, 9.5, 118.4, 57.1))
n <- length(x)
x
# Estimateur du maximum de vraisemblance
emv_x <- 1/mean(x)
emv_x
# Estimateur optimal
emv_opt_x <- (n - 1)/sum(x)
emv_opt_x
# Intervalles de confiance
t.test(x, conf.level=0.5)       # Seuil de 50%
t.test(x, conf.level=0.9)       # Seuil de 10%
t.test(x, conf.level=0.95)      # Seuil de 5%
t.test(x, conf.level=0.99)      # Seuil de 1%
# Intervalles de confiance, à la main
itv_conf <- function(x, alpha, sup=TRUE) {
n <- length(x)
if (sup) {
return (mean(x) + sd(x) * qt(1-alpha/2, n-1) / sqrt(n))
} else {
return (mean(x) - sd(x) * qt(1-alpha/2, n-1) / sqrt(n))
}
}
itv_conf(x, 0.5, FALSE)
itv_conf(x, 0.5, TRUE)
itv_conf(x, 0.1, FALSE)
itv_conf(x, 0.1, TRUE)
itv_conf(x, 0.05, FALSE)
itv_conf(x, 0.05, TRUE)
itv_conf(x, 0.01, FALSE)
itv_conf(x, 0.01, TRUE)
# ===========================
# Simulation des échantillons
emv_c <- NULL
for (i in 1:100) {
ech <- rexp(n = 5, rate = 10)
emv_c <- c(emv_c, 1/mean(ech))
}
hist(emv_c)
abline(v=10, col="green")
abline(v=mean(emv_c), col="red")
biais_emv = 1/100 * sum(emv_c - 10)
emv_c <- NULL
for (i in 1:100) {
ech <- rexp(n = 5, rate = 10)
emv_c <- c(emv_c, 1/mean(ech))
}
hist(emv_c)
abline(v=10, col="green")
abline(v=mean(emv_c), col="red")
biais_emv = 1/100 * sum(emv_c - 10)
biais_emv
emv_c <- NULL
for (i in 1:100) {
ech <- rexp(n = 10, rate = 10)
emv_c <- c(emv_c, 1/mean(ech))
}
hist(emv_c)
abline(v=10, col="green")
abline(v=mean(emv_c), col="red")
biais_emv = 1/100 * sum(emv_c - 10)
biais_emv
emv_c <- NULL
for (i in 1:100) {
ech <- rexp(n = 15, rate = 10)
emv_c <- c(emv_c, 1/mean(ech))
}
hist(emv_c)
abline(v=10, col="green")
abline(v=mean(emv_c), col="red")
biais_emv = 1/100 * sum(emv_c - 10)
biais_emv
emv_c <- NULL
for (i in 1:100) {
ech <- rexp(n = 100, rate = 10)
emv_c <- c(emv_c, 1/mean(ech))
}
hist(emv_c)
abline(v=10, col="green")
abline(v=mean(emv_c), col="red")
biais_emv = 1/100 * sum(emv_c - 10)
biais_emv
emv_c <- NULL
for (i in 1:100) {
ech <- rexp(n = 1000, rate = 10)
emv_c <- c(emv_c, 1/mean(ech))
}
hist(emv_c)
abline(v=10, col="green")
abline(v=mean(emv_c), col="red")
biais_emv = 1/100 * sum(emv_c - 10)
biais_emv
emv_c <- NULL
for (i in 1:100) {
ech <- rexp(n = 10000, rate = 10)
emv_c <- c(emv_c, 1/mean(ech))
}
hist(emv_c)
abline(v=10, col="green")
abline(v=mean(emv_c), col="red")
biais_emv = 1/100 * sum(emv_c - 10)
biais_emv
emv_c <- NULL
for (i in 1:100) {
ech <- rexp(n = 100000, rate = 10)
emv_c <- c(emv_c, 1/mean(ech))
}
hist(emv_c)
abline(v=10, col="green")
abline(v=mean(emv_c), col="red")
biais_emv = 1/100 * sum(emv_c - 10)
biais_emv
m <- 100
n <- 5
alpha <- 0.05
fois_param <- NULL
for (i in 1:m) {
ech <- rexp(n)
fois_param <- c(fois_param, (itv_conf(x, alpha, FALSE) <= 1 <= itv_conf(x, 0.01, TRUE)))
}
m <- 100
n <- 5
alpha <- 0.05
fois_param <- NULL
for (i in 1:m) {
ech <- rexp(n)
fois_param <- c(fois_param, (itv_conf(x, alpha, FALSE) <= 1 & 1 <= itv_conf(x, 0.01, TRUE)))
}
fois_param
mean(fois_param)
m <- 100
n <- 5
alpha <- 0.5
fois_param <- NULL
for (i in 1:m) {
ech <- rexp(n)
fois_param <- c(fois_param, (itv_conf(x, alpha, FALSE) <= 1 & 1 <= itv_conf(x, 0.01, TRUE)))
}
mean(fois_param)
m <- 100
n <- 5
alpha <- 0.5
fois_param <- NULL
for (i in 1:m) {
ech <- rexp(n)
fois_param <- c(fois_param, (itv_conf(x, alpha, FALSE) <= 1 & 1 <= itv_conf(x, 0.01, TRUE)))
}
mean(fois_param)
m <- 100
n <- 5
alpha <- 0.5
fois_param <- NULL
for (i in 1:m) {
ech <- rexp(n)
fois_param <- c(fois_param, (itv_conf(x, alpha, FALSE) <= 1 & 1 <= itv_conf(x, 0.01, TRUE)))
}
mean(fois_param)
m <- 100
n <- 100
alpha <- 0.5
fois_param <- NULL
for (i in 1:m) {
ech <- rexp(n)
fois_param <- c(fois_param, (itv_conf(x, alpha, FALSE) <= 1 & 1 <= itv_conf(x, 0.01, TRUE)))
}
mean(fois_param)
m <- 100
n <- 100
alpha <- 0.5
fois_param <- NULL
for (i in 1:m) {
ech <- rexp(n)
fois_param <- c(fois_param, (itv_conf(x, alpha, FALSE) <= 1 & 1 <= itv_conf(x, 0.01, TRUE)))
}
mean(fois_param)
itv_conf(x, alpha, FALSE)
m <- 100
n <- 100
alpha <- 0.5
fois_param <- NULL
for (i in 1:m) {
ech <- rexp(n)
fois_param <- c(fois_param, (itv_conf(ech, alpha, FALSE) <= 1 & 1 <= itv_conf(ech, 0.01, TRUE)))
}
mean(fois_param)
m <- 100
n <- 100
alpha <- 0.05
fois_param <- NULL
for (i in 1:m) {
ech <- rexp(n)
fois_param <- c(fois_param, (itv_conf(ech, alpha, FALSE) <= 1 & 1 <= itv_conf(ech, 0.01, TRUE)))
}
mean(fois_param)
m <- 100
n <- 100
alpha <- 0.05
fois_param <- NULL
for (i in 1:m) {
ech <- rexp(n)
fois_param <- c(fois_param, (itv_conf(ech, alpha, FALSE) <= 1 & 1 <= itv_conf(ech, 0.01, TRUE)))
}
mean(fois_param)
m <- 100
n <- 100
alpha <- 0.05
fois_param <- NULL
for (i in 1:m) {
ech <- rexp(n)
fois_param <- c(fois_param, (itv_conf(ech, alpha, FALSE) <= 1 & 1 <= itv_conf(ech, 0.01, TRUE)))
}
mean(fois_param)
m <- 100
n <- 100
alpha <- 0.05
fois_param <- NULL
for (i in 1:m) {
ech <- rexp(n)
fois_param <- c(fois_param, (itv_conf(ech, alpha, FALSE) <= 1 & 1 <= itv_conf(ech, 0.01, TRUE)))
}
mean(fois_param)
m <- 100
n <- 100
alpha <- 0.05
fois_param <- NULL
for (i in 1:m) {
ech <- rexp(n)
fois_param <- c(fois_param, (itv_conf(ech, alpha, FALSE) <= 1 & 1 <= itv_conf(ech, 0.01, TRUE)))
}
mean(fois_param)
m <- 100
n <- 100
alpha <- 0.5
fois_param <- NULL
for (i in 1:m) {
ech <- rexp(n)
fois_param <- c(fois_param, (itv_conf(ech, alpha, FALSE) <= 1 & 1 <= itv_conf(ech, 0.01, TRUE)))
}
mean(fois_param)
m <- 100
n <- 100
alpha <- 0.5
fois_param <- NULL
for (i in 1:m) {
ech <- rexp(n)
fois_param <- c(fois_param, (itv_conf(ech, alpha, FALSE) <= 1 & 1 <= itv_conf(ech, 0.01, TRUE)))
}
mean(fois_param)
m <- 100
n <- 5
alpha <- 0.5
fois_param <- NULL
for (i in 1:m) {
ech <- rexp(n)
fois_param <- c(fois_param, (itv_conf(ech, alpha, FALSE) <= 1 & 1 <= itv_conf(ech, 0.01, TRUE)))
}
mean(fois_param)
m <- 100
n <- 5
alpha <- 0.5
fois_param <- NULL
for (i in 1:m) {
ech <- rexp(n)
fois_param <- c(fois_param, (itv_conf(ech, alpha, FALSE) <= 1 & 1 <= itv_conf(ech, 0.01, TRUE)))
}
mean(fois_param)
m <- 100
n <- 5
alpha <- 0.5
fois_param <- NULL
for (i in 1:m) {
ech <- rexp(n)
fois_param <- c(fois_param, (itv_conf(ech, alpha, FALSE) <= 1 & 1 <= itv_conf(ech, 0.01, TRUE)))
}
mean(fois_param)
m <- 100
n <- 5
alpha <- 0.5
fois_param <- NULL
for (i in 1:m) {
ech <- rexp(n)
fois_param <- c(fois_param, (itv_conf(ech, alpha, FALSE) <= 1 & 1 <= itv_conf(ech, 0.01, TRUE)))
}
mean(fois_param)
m <- 100
n <- 5
alpha <- 0.5
fois_param <- NULL
for (i in 1:m) {
ech <- rexp(n)
fois_param <- c(fois_param, (itv_conf(ech, alpha, FALSE) <= 1 & 1 <= itv_conf(ech, 0.01, TRUE)))
}
mean(fois_param)
m <- 100
n <- 5
alpha <- 0.5
fois_param <- NULL
for (i in 1:m) {
ech <- rexp(n)
fois_param <- c(fois_param, (itv_conf(ech, alpha, FALSE) <= 1 & 1 <= itv_conf(ech, 0.01, TRUE)))
}
mean(fois_param)
m <- 100
n <- 50000
alpha <- 0.5
fois_param <- NULL
for (i in 1:m) {
ech <- rexp(n)
fois_param <- c(fois_param, (itv_conf(ech, alpha, FALSE) <= 1 & 1 <= itv_conf(ech, 0.01, TRUE)))
}
mean(fois_param)
m <- 100
n <- 5
alpha <- 0.05
fois_param <- NULL
for (i in 1:m) {
ech <- rexp(n)
fois_param <- c(fois_param, (itv_conf(ech, alpha, FALSE) <= 1 & 1 <= itv_conf(ech, 0.01, TRUE)))
}
mean(fois_param)
m <- 100
n <- 5
alpha <- 0.05
fois_param <- NULL
for (i in 1:m) {
ech <- rexp(n)
fois_param <- c(fois_param, (itv_conf(ech, alpha, FALSE) <= 1 & 1 <= itv_conf(ech, 0.01, TRUE)))
}
mean(fois_param)
m <- 1000
n <- 5
alpha <- 0.05
fois_param <- NULL
for (i in 1:m) {
ech <- rexp(n)
fois_param <- c(fois_param, (itv_conf(ech, alpha, FALSE) <= 1 & 1 <= itv_conf(ech, 0.01, TRUE)))
}
mean(fois_param)
m <- 1000
n <- 5
alpha <- 0.05
fois_param <- NULL
for (i in 1:m) {
ech <- rexp(n)
fois_param <- c(fois_param, (itv_conf(ech, alpha, FALSE) <= 1 & 1 <= itv_conf(ech, 0.01, TRUE)))
}
mean(fois_param)
m <- 100000
n <- 5
alpha <- 0.05
fois_param <- NULL
for (i in 1:m) {
ech <- rexp(n)
fois_param <- c(fois_param, (itv_conf(ech, alpha, FALSE) <= 1 & 1 <= itv_conf(ech, 0.01, TRUE)))
}
mean(fois_param)
m <- 100
n <- 5
alpha <- 0.05
lambda <- 1
fois_param <- NULL
for (i in 1:m) {
ech <- rexp(n, lambda)
fois_param <- c(fois_param, (itv_conf(ech, alpha, FALSE) <= 1/lambda & 1/lambda <= itv_conf(ech, 0.01, TRUE)))
}
mean(fois_param)
m <- 100
n <- 5
alpha <- 0.05
lambda <- 1
fois_param <- NULL
for (i in 1:m) {
ech <- rexp(n, lambda)
fois_param <- c(fois_param, (itv_conf(ech, alpha, FALSE) <= 1/lambda & 1/lambda <= itv_conf(ech, 0.01, TRUE)))
}
mean(fois_param)
m <- 100
n <- 5
alpha <- 0.05
lambda <- 1
fois_param <- NULL
for (i in 1:m) {
ech <- rexp(n, lambda)
fois_param <- c(fois_param, (itv_conf(ech, alpha, FALSE) <= 1/lambda & 1/lambda <= itv_conf(ech, 0.01, TRUE)))
}
mean(fois_param)
m <- 100
n <- 5
alpha <- 0.05
lambda <- 1
fois_param <- NULL
for (i in 1:m) {
ech <- rexp(n, lambda)
fois_param <- c(fois_param, (itv_conf(ech, alpha, FALSE) <= 1/lambda & 1/lambda <= itv_conf(ech, 0.01, TRUE)))
}
mean(fois_param)
m <- 100
n <- 5000
alpha <- 0.05
lambda <- 1
fois_param <- NULL
for (i in 1:m) {
ech <- rexp(n, lambda)
fois_param <- c(fois_param, (itv_conf(ech, alpha, FALSE) <= 1/lambda & 1/lambda <= itv_conf(ech, 0.01, TRUE)))
}
mean(fois_param)
m <- 100
n <- 5000
alpha <- 0.05
lambda <- 1
fois_param <- NULL
for (i in 1:m) {
ech <- rexp(n, lambda)
fois_param <- c(fois_param, (itv_conf(ech, alpha, FALSE) <= 1/lambda & 1/lambda <= itv_conf(ech, 0.01, TRUE)))
}
mean(fois_param)
source('/user/7/.base/pepinau/home/1A/PMS/TP/scripts/p1_q3.R')
# Exercice 1 - Question 3
# Graphe de probabilités pour la loi géométrique
groupe1 <- read("../groupe1.txt")[,1]
groupe2 <- read("../groupe2.txt")[,1]
# Exercice 1 - Question 3
# Graphe de probabilités pour la loi géométrique
groupe1 <- read.table("../groupe1.txt")[,1]
groupe2 <- read.table("../groupe2.txt")[,1]
# Exercice 1 - Question 3
# Graphe de probabilités pour la loi géométrique
groupe1 <- read.table("./groupe1.txt")[,1]
groupe2 <- read.table("./groupe2.txt")[,1]
# Exercice 1 - Question 3
# Graphe de probabilités pour la loi géométrique
groupe1 <- read.table("groupe1.txt")[,1]
groupe2 <- read.table("groupe2.txt")[,1]
getwd()
cd
setwd("/user/7/.base/pepinau/home/1A/PMS/TP/scripts")
# Exercice 1 - Question 3
# Graphe de probabilités pour la loi géométrique
groupe1 <- read.table("groupe1.txt")[,1]
groupe2 <- read.table("groupe2.txt")[,1]
q()
